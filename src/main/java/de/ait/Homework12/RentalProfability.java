package de.ait.Homework12;

/*
Упражнение 3:Расчет рентабельности аренды: В одном массиве хранится стоимость аренды за месяц
для нескольких объектов недвижимости, в другом — их цена продажи. Напишите программу, которая вычислит и
выведет рентабельность аренды для каждого объекта (отношение стоимости аренды к стоимости недвижимости).

Пример:

int[] rentPrices = {1200, 1500, 1800, 1300, 1600};
int[] sellPrices = {250000, 300000, 350000, 280000, 320000};

 */

public class RentalProfability {

    public static void main(String[] args) {
        int[] rentPrices = {1200, 1500, 1800, 1300, 1600};
        int[] sellPrices = {250000, 300000, 350000, 280000, 320000};

        for ( int i = 0; i < rentPrices.length; i++) {
            int rentPrice = rentPrices[i];
            int sellPrice = sellPrices[i];

            double rentPriceProfitability = ((double) rentPrice / sellPrice) * 100;
            rentPriceProfitability = (double) Math.round(rentPriceProfitability * 100.0) / 100.0;
            System.out.println("Profit Object: " + (i+1) + " : " + rentPriceProfitability + "%");
        }
    }
}

/*
Конструкция rentPriceProfitability = (double) Math.round(rentPriceProfitability * 100.0) / 100.0; используется для округления значения переменной rentPriceProfitability до двух знаков после запятой.

Давай разберём эту строку по частям:

	1.	rentPriceProfitability * 100.0:
	•	Мы умножаем значение переменной rentPriceProfitability на 100. Это временный шаг для того,
	чтобы сдвинуть десятичную точку на два знака вправо. Например, если rentPriceProfitability равно 0.0048,
	то после умножения оно станет 0.48.
	2.	Math.round(rentPriceProfitability * 100.0):
	•	Метод Math.round() используется для округления числа до ближайшего целого значения.
	Поскольку после умножения на 100 число будет смещено на два знака вправо,
	округление произойдёт на уровне второго знака после запятой.
	•	Например, если результат после умножения был 48.53, то Math.round() округлит его до 49.
	3.	(double):
	•	Приведение результата к типу double. Метод Math.round() возвращает результат в типе long,
	но нам нужно число с плавающей точкой, поэтому мы явно приводим результат к double.
	4.	/ 100.0:
	•	Чтобы вернуть число в исходный диапазон (с правильным положением десятичной точки),
	мы делим результат на 100. Это сдвигает десятичную точку обратно на два знака влево.
	•	Например, если после округления получилось 49, то деление на 100 даст 0.49.

Пример:

Допустим, значение rentPriceProfitability равно 0.004856.

	1.	Умножаем на 100: 0.004856 * 100 = 0.4856.
	2.	Округляем до ближайшего целого числа: Math.round(0.4856) = 49.
	3.	Приводим к типу double: Результат становится 49.0.
	4.	Делим на 100: 49.0 / 100.0 = 0.49.

Итог:

Эта конструкция округляет значение rentPriceProfitability до двух знаков после запятой и выводит его в привычном формате.
 */